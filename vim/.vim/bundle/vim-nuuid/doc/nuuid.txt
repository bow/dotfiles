*nuuid.txt*     For Vim Version 7.0+     Last change: 2014 March 28

==============================================================================
CONTENTS                                                      *nuuid-contents*

    1. Intro ........................... |nuuid-intro|
    2. Requirements .................... |nuuid-requirements|
    3. Options ......................... |nuuid-options|
    4. Commands ........................ |nuuid-commands|
    5. Mappings ........................ |nuuid-mappings|
    6. Abbreviations ................... |nuuid-abbrev|
    7. License ......................... |nuuid-license|


==============================================================================
1. INTRO                                                         *nuuid-intro*

Sometimes you just need to insert a fresh UUID into a file. Copying and pasting
UUIDs from external tools is cumbersome for such a simple operation. Done often
enough, it can even be a chore. This simple plugin endeavors to make that task
easier. Inspired by the "nguid" macro expansion in JetBrains ReSharper plugin
for Visual Studio, vim-nuuid brings easy UUID generation to Vim.

Note: All UUIDs are written in this format:
    xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx

==============================================================================
2. REQUIREMENTS                                           *nuuid-requirements*

Python is used to generate V4 UUIDS and is, therefore, required. Vim must have
+python for this plugin to function.


==============================================================================
3. OPTIONS                                                     *nuuid-options*

g:nuuid_no_mappings                                        *nuuid_no_mappings*
    Enable or disable the default mappings (see |nuuid-mappings|). Set to 1 to
    disable the default mappings. The default value is 0.
    Example: >

        let g:nuuid_no_mappings = 1
<

g:nuuid_iabbrev                                                *nuuid_iabbrev*
    Enable or disable to control the startup state of insert abbreviations. The
    abbreviations can still be toggled using the |:NuuidToggleAbbrev| command.
    Set to 0 to disable abbreviations at startup. The default value is 1.
    Example: >

        let g:nuuid_iabbrev = 0
<

==============================================================================
4. COMMANDS                                                   *nuuid-commands*

:NuuidAll                                                          *:NuuidAll*
    Replace each occurrence of the strings "nuuid" and "nguid" with a newly
    generated UUID. This command accepts a range and defaults to the current
    line. 

:NuuidReplaceAll                                            *:NuuidReplaceAll*
    Replace each existing UUID and each occurrence of the strings "nuuid" and
    "nguid" with a newly generated UUID. This command accepts a range and
    defaults to the current line. 

:NuuidToggleAbbrev                                        *:NuuidToggleAbbrev*
    Enable or disable insert mode abbreviations. See |nuuid-abbrev| for more
    information. Abbreviations are enabled at startup, but this behavior may be
    controlled using the |nuuid_iabbrev| setting.

<Plug>Nuuid                                                      *<Plug>Nuuid*
    Mapping to insert a new UUID at the current cursor location. This mapping
    is valid in normal and visual modes. See |nuuid-mappings| for default key
    maps.


==============================================================================
5. MAPPINGS                                                   *nuuid-mappings*

<Leader>u
    Maps to |<Plug>Nuuid|. Set |nuuid_no_mappings| to change.


==============================================================================
6. ABBREVIATIONS                                                *nuuid-abbrev*

Insert mode abbreviations are defined for the strings "nuuid" and "nguid".
These abbreviations are enabled at startup and are toggled using the
|:NuuidToggleAbbrev| command. The initial state may be changed using
|nuuid_iabbrev|.


==============================================================================
7. LICENSE                                                     *nuuid-license*

The MIT License (MIT)

Copyright (c) 2014 Kevin Burdett

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.




vim:textwidth=78:expandtab:filetype=help:norightleft
